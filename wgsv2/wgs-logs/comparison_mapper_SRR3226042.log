18/04/05 22:29:04 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
18/04/05 22:29:07 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[M::bwa_idx_load_from_disk] read 0 ALT contigs
[M::process] read 532632 sequences (40000039 bp)...
[M::process] read 532478 sequences (40000041 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (64, 97888, 2, 94)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (130, 189, 318)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 694)
[M::mem_pestat] mean and std.dev: (198.00, 124.01)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 882)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 283, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 746)
[M::mem_pestat] mean and std.dev: (301.34, 139.10)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 926)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (142, 228, 396)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 904)
[M::mem_pestat] mean and std.dev: (239.18, 159.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1158)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 532632 reads in 32.643 CPU sec, 8.582 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (77, 98139, 4, 69)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (94, 166, 320)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 772)
[M::mem_pestat] mean and std.dev: (169.65, 110.12)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 998)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (206, 282, 383)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 737)
[M::mem_pestat] mean and std.dev: (299.81, 136.70)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 914)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (115, 198, 304)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 682)
[M::mem_pestat] mean and std.dev: (207.25, 128.82)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 871)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 532478 reads in 33.267 CPU sec, 10.356 real sec
[M::process] read 532058 sequences (40000011 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (91, 98375, 2, 79)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (143, 204, 379)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 851)
[M::mem_pestat] mean and std.dev: (225.27, 147.32)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1087)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (210, 289, 395)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 765)
[M::mem_pestat] mean and std.dev: (309.01, 142.77)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 950)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (144, 214, 381)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 855)
[M::mem_pestat] mean and std.dev: (239.81, 147.42)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1092)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 532058 reads in 34.773 CPU sec, 11.694 real sec
[M::process] read 531756 sequences (40000009 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (74, 98709, 0, 78)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (160, 234, 338)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 694)
[M::mem_pestat] mean and std.dev: (243.97, 130.05)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 872)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (213, 291, 399)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 771)
[M::mem_pestat] mean and std.dev: (311.95, 143.26)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 957)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (134, 218, 329)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 719)
[M::mem_pestat] mean and std.dev: (219.68, 124.80)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 914)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::process] read 533002 sequences (40000068 bp)...
[M::mem_process_seqs] Processed 531756 reads in 33.922 CPU sec, 10.908 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (73, 98649, 4, 69)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (107, 172, 325)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 761)
[M::mem_pestat] mean and std.dev: (197.17, 141.31)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 979)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (211, 294, 409)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 805)
[M::mem_pestat] mean and std.dev: (317.95, 153.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1003)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (146, 198, 354)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 770)
[M::mem_pestat] mean and std.dev: (236.23, 146.24)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 978)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 533002 reads in 34.062 CPU sec, 11.701 real sec
[M::process] read 532932 sequences (40000052 bp)...
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (84, 98667, 2, 84)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (124, 213, 462)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 1138)
[M::mem_pestat] mean and std.dev: (237.38, 172.73)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1476)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (211, 293, 408)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 802)
[M::mem_pestat] mean and std.dev: (317.01, 152.44)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 999)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (140, 236, 390)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 890)
[M::mem_pestat] mean and std.dev: (237.93, 142.87)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1140)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::process] read 532538 sequences (40000055 bp)...
[M::mem_process_seqs] Processed 532932 reads in 33.818 CPU sec, 10.777 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (80, 98801, 3, 84)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (166, 246, 401)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 871)
[M::mem_pestat] mean and std.dev: (268.99, 166.92)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1106)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (215, 299, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 830)
[M::mem_pestat] mean and std.dev: (325.02, 158.69)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (122, 209, 316)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 704)
[M::mem_pestat] mean and std.dev: (218.15, 137.20)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 898)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::process] read 532342 sequences (40000066 bp)...
[M::mem_process_seqs] Processed 532538 reads in 33.914 CPU sec, 10.696 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (60, 98706, 4, 70)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (132, 190, 343)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 765)
[M::mem_pestat] mean and std.dev: (223.20, 137.63)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 976)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (215, 301, 420)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 830)
[M::mem_pestat] mean and std.dev: (325.54, 158.00)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1035)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (172, 294, 447)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 997)
[M::mem_pestat] mean and std.dev: (280.30, 166.46)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1272)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::process] read 110830 sequences (8331667 bp)...
[M::mem_process_seqs] Processed 532342 reads in 32.686 CPU sec, 10.309 real sec
[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (20, 20529, 1, 21)
[M::mem_pestat] analyzing insert size distribution for orientation FF...
[M::mem_pestat] (25, 50, 75) percentile: (132, 191, 298)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 630)
[M::mem_pestat] mean and std.dev: (195.80, 115.62)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 796)
[M::mem_pestat] analyzing insert size distribution for orientation FR...
[M::mem_pestat] (25, 50, 75) percentile: (216, 299, 423)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 837)
[M::mem_pestat] mean and std.dev: (327.24, 159.41)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1044)
[M::mem_pestat] skip orientation RF as there are not enough pairs
[M::mem_pestat] analyzing insert size distribution for orientation RR...
[M::mem_pestat] (25, 50, 75) percentile: (117, 194, 386)
[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 924)
[M::mem_pestat] mean and std.dev: (237.15, 151.13)
[M::mem_pestat] low and high boundaries for proper pairs: (1, 1193)
[M::mem_pestat] skip orientation FF
[M::mem_pestat] skip orientation RR
[M::mem_process_seqs] Processed 110830 reads in 6.806 CPU sec, 2.270 real sec
[main] Version: 0.7.12-r1039
[main] CMD: /home/elon/biosoft/bwa/0.7.12/bwa mem -t 4 -R @RG\tID:foo\tPL:illumina\tSM:E.coli_K12 /home/elon/wgs/input/fasta/E.coli_K12_MG1655.fa SRR3226042_1.fastq.gz SRR3226042_2.fastq.gz
[main] Real time: 93.588 sec; CPU: 277.395 sec

real	1m34.494s
user	5m26.314s
sys	0m4.395s

real	0m20.839s
user	0m49.120s
sys	0m1.784s
Using GATK jar /home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -jar /home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar MarkDuplicates -I SRR3226042.sorted.bam -O SRR3226042.sorted.markdup.bam -M SRR3226042.sorted.markup_metrics.txt
22:31:08.778 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar!/com/intel/gkl/native/libgkl_compression.so
[Thu Apr 05 22:31:08 CST 2018] MarkDuplicates  --INPUT SRR3226042.sorted.bam --OUTPUT SRR3226042.sorted.markdup.bam --METRICS_FILE SRR3226042.sorted.markup_metrics.txt  --MAX_SEQUENCES_FOR_DISK_READ_ENDS_MAP 50000 --MAX_FILE_HANDLES_FOR_READ_ENDS_MAP 8000 --SORTING_COLLECTION_SIZE_RATIO 0.25 --TAG_DUPLICATE_SET_MEMBERS false --REMOVE_SEQUENCING_DUPLICATES false --TAGGING_POLICY DontTag --CLEAR_DT true --ADD_PG_TAG_TO_READS true --REMOVE_DUPLICATES false --ASSUME_SORTED false --DUPLICATE_SCORING_STRATEGY SUM_OF_BASE_QUALITIES --PROGRAM_RECORD_ID MarkDuplicates --PROGRAM_GROUP_NAME MarkDuplicates --READ_NAME_REGEX <optimized capture of last three ':' separated fields as numeric values> --OPTICAL_DUPLICATE_PIXEL_DISTANCE 100 --MAX_OPTICAL_DUPLICATE_SET_SIZE 300000 --VERBOSITY INFO --QUIET false --VALIDATION_STRINGENCY STRICT --COMPRESSION_LEVEL 1 --MAX_RECORDS_IN_RAM 500000 --CREATE_INDEX false --CREATE_MD5_FILE false --GA4GH_CLIENT_SECRETS client_secrets.json --help false --version false --showHidden false --USE_JDK_DEFLATER false --USE_JDK_INFLATER false
[Thu Apr 05 22:31:08 CST 2018] Executing as elon@longsl on Linux 4.13.0-36-generic amd64; Java HotSpot(TM) 64-Bit Server VM 1.8.0_161-b12; Deflater: Intel; Inflater: Intel; Picard version: Version:4.0.2.1
INFO	2018-04-05 22:31:08	MarkDuplicates	Start of doWork freeMemory: 210584056; totalMemory: 220200960; maxMemory: 1756364800
INFO	2018-04-05 22:31:08	MarkDuplicates	Reading input file and constructing read end information.
INFO	2018-04-05 22:31:08	MarkDuplicates	Will retain up to 6363640 data points before spilling to disk.
WARNING	2018-04-05 22:31:08	AbstractOpticalDuplicateFinderCommandLineProgram	A field field parsed out of a read name was expected to contain an integer and did not. Read name: SRR3226042.161754. Cause: String 'SRR3226042.161754' did not start with a parsable number.
INFO	2018-04-05 22:31:16	MarkDuplicates	Read     1,000,000 records.  Elapsed time: 00:00:07s.  Time for last 1,000,000:    7s.  Last read position: NC_000913.3:986,101
INFO	2018-04-05 22:31:16	MarkDuplicates	Tracking 249 as yet unmatched pairs. 249 records in RAM.
INFO	2018-04-05 22:31:21	MarkDuplicates	Read 1775584 records. 0 pairs never matched.
INFO	2018-04-05 22:31:21	MarkDuplicates	After buildSortedReadEndLists freeMemory: 629608432; totalMemory: 886046720; maxMemory: 1756364800
INFO	2018-04-05 22:31:21	MarkDuplicates	Will retain up to 54886400 duplicate indices before spilling to disk.
INFO	2018-04-05 22:31:21	MarkDuplicates	Traversing read pair information and detecting duplicates.
INFO	2018-04-05 22:31:22	MarkDuplicates	Traversing fragment information and detecting duplicates.
INFO	2018-04-05 22:31:23	MarkDuplicates	Sorting list of duplicate records.
INFO	2018-04-05 22:31:23	MarkDuplicates	After generateDuplicateIndexes freeMemory: 429060624; totalMemory: 886046720; maxMemory: 1756364800
INFO	2018-04-05 22:31:23	MarkDuplicates	Marking 58673 records as duplicates.
INFO	2018-04-05 22:31:23	MarkDuplicates	Found 0 optical duplicate clusters.
INFO	2018-04-05 22:31:23	MarkDuplicates	Reads are assumed to be ordered by: coordinate
INFO	2018-04-05 22:31:40	MarkDuplicates	Before output close freeMemory: 1309967136; totalMemory: 1329594368; maxMemory: 1756364800
INFO	2018-04-05 22:31:40	MarkDuplicates	After output close freeMemory: 1292913792; totalMemory: 1308098560; maxMemory: 1756364800
[Thu Apr 05 22:31:40 CST 2018] picard.sam.markduplicates.MarkDuplicates done. Elapsed time: 0.52 minutes.
Runtime.totalMemory()=1308098560

real	0m34.408s
user	1m1.520s
sys	0m2.877s

real	0m3.994s
user	0m3.961s
sys	0m0.024s
Using GATK jar /home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar
Running:
    java -Dsamjdk.use_async_io_read_samtools=false -Dsamjdk.use_async_io_write_samtools=true -Dsamjdk.use_async_io_write_tribble=false -Dsamjdk.compression_level=1 -jar /home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar HaplotypeCaller -R /home/elon/wgs/input/fasta/E.coli_K12_MG1655.fa --emit-ref-confidence GVCF -I SRR3226042.sorted.markdup.bam -O SRR3226042.g.vcf
22:31:47.134 INFO  NativeLibraryLoader - Loading libgkl_compression.so from jar:file:/home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar!/com/intel/gkl/native/libgkl_compression.so
22:31:47.873 INFO  HaplotypeCaller - ------------------------------------------------------------
22:31:47.874 INFO  HaplotypeCaller - The Genome Analysis Toolkit (GATK) v4.0.2.1
22:31:47.874 INFO  HaplotypeCaller - For support and documentation go to https://software.broadinstitute.org/gatk/
22:31:47.874 INFO  HaplotypeCaller - Executing as elon@longsl on Linux v4.13.0-36-generic amd64
22:31:47.874 INFO  HaplotypeCaller - Java runtime: Java HotSpot(TM) 64-Bit Server VM v1.8.0_161-b12
22:31:47.874 INFO  HaplotypeCaller - Start Date/Time: 2018年4月5日 下午10时31分47秒
22:31:47.874 INFO  HaplotypeCaller - ------------------------------------------------------------
22:31:47.874 INFO  HaplotypeCaller - ------------------------------------------------------------
22:31:47.875 INFO  HaplotypeCaller - HTSJDK Version: 2.14.3
22:31:47.875 INFO  HaplotypeCaller - Picard Version: 2.17.2
22:31:47.875 INFO  HaplotypeCaller - HTSJDK Defaults.COMPRESSION_LEVEL : 1
22:31:47.875 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_READ_FOR_SAMTOOLS : false
22:31:47.876 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_SAMTOOLS : true
22:31:47.876 INFO  HaplotypeCaller - HTSJDK Defaults.USE_ASYNC_IO_WRITE_FOR_TRIBBLE : false
22:31:47.876 INFO  HaplotypeCaller - Deflater: IntelDeflater
22:31:47.876 INFO  HaplotypeCaller - Inflater: IntelInflater
22:31:47.876 INFO  HaplotypeCaller - GCS max retries/reopens: 20
22:31:47.876 INFO  HaplotypeCaller - Using google-cloud-java patch 6d11bef1c81f885c26b2b56c8616b7a705171e4f from https://github.com/droazen/google-cloud-java/tree/dr_all_nio_fixes
22:31:47.876 INFO  HaplotypeCaller - Initializing engine
22:31:48.332 INFO  HaplotypeCaller - Done initializing engine
22:31:48.337 INFO  HaplotypeCallerEngine - Standard Emitting and Calling confidence set to 0.0 for reference-model confidence output
22:31:48.337 INFO  HaplotypeCallerEngine - All sites annotated with PLs forced to true for reference-model confidence output
22:31:48.936 INFO  NativeLibraryLoader - Loading libgkl_utils.so from jar:file:/home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar!/com/intel/gkl/native/libgkl_utils.so
22:31:49.015 INFO  NativeLibraryLoader - Loading libgkl_pairhmm_omp.so from jar:file:/home/elon/biosoft/gatk/4.0/gatk-package-4.0.2.1-local.jar!/com/intel/gkl/native/libgkl_pairhmm_omp.so
22:31:49.079 WARN  IntelPairHmm - Flush-to-zero (FTZ) is enabled when running PairHMM
22:31:49.080 INFO  IntelPairHmm - Available threads: 4
22:31:49.080 INFO  IntelPairHmm - Requested threads: 4
22:31:49.080 INFO  PairHMM - Using the OpenMP multi-threaded AVX-accelerated native PairHMM implementation
22:31:49.179 INFO  ProgressMeter - Starting traversal
22:31:49.180 INFO  ProgressMeter -        Current Locus  Elapsed Minutes     Regions Processed   Regions/Minute
22:31:59.309 INFO  ProgressMeter -    NC_000913.3:73161              0.2                   260           1540.1
22:32:13.925 INFO  ProgressMeter -   NC_000913.3:224928              0.4                   780           1891.3
22:32:29.630 INFO  ProgressMeter -   NC_000913.3:226567              0.7                   790           1171.8
22:32:42.341 INFO  ProgressMeter -   NC_000913.3:228009              0.9                   800            902.9
22:32:54.422 INFO  ProgressMeter -   NC_000913.3:265118              1.1                   940            864.5
22:33:05.794 INFO  ProgressMeter -   NC_000913.3:270581              1.3                   970            759.7
22:33:15.797 INFO  ProgressMeter -   NC_000913.3:504831              1.4                  1780           1233.0
22:33:27.200 INFO  ProgressMeter -   NC_000913.3:731683              1.6                  2570           1573.1
22:33:37.429 INFO  ProgressMeter -   NC_000913.3:864240              1.8                  3040           1685.0
22:33:47.457 INFO  ProgressMeter -  NC_000913.3:1085608              2.0                  3800           1927.7
22:33:57.488 INFO  ProgressMeter -  NC_000913.3:1285778              2.1                  4480           2095.0
22:34:07.971 INFO  ProgressMeter -  NC_000913.3:1533613              2.3                  5330           2304.2
22:34:18.069 INFO  ProgressMeter -  NC_000913.3:1742873              2.5                  6050           2438.1
22:34:19.048 INFO  HaplotypeCaller - 129766 read(s) filtered by: ((((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter) AND GoodCigarReadFilter) AND WellformedReadFilter)
  129766 read(s) filtered by: (((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter) AND GoodCigarReadFilter)
      129766 read(s) filtered by: ((((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter) AND NonZeroReferenceLengthAlignmentReadFilter)
          129766 read(s) filtered by: (((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter) AND PassesVendorQualityCheckReadFilter)
              129766 read(s) filtered by: ((((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter) AND NotDuplicateReadFilter)
                  81984 read(s) filtered by: (((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter) AND NotSecondaryAlignmentReadFilter)
                      81984 read(s) filtered by: ((MappingQualityReadFilter AND MappingQualityAvailableReadFilter) AND MappedReadFilter)
                          81984 read(s) filtered by: (MappingQualityReadFilter AND MappingQualityAvailableReadFilter)
                              81984 read(s) filtered by: MappingQualityReadFilter 
                  47782 read(s) filtered by: NotDuplicateReadFilter 

22:34:19.049 INFO  ProgressMeter -  NC_000913.3:1766873              2.5                  6139           2457.8
22:34:19.049 INFO  ProgressMeter - Traversal complete. Processed 6139 total regions in 2.5 minutes.
22:34:19.061 INFO  VectorLoglessPairHMM - Time spent in setup for JNI call : 0.073068926
22:34:19.061 INFO  PairHMM - Total compute time in PairHMM computeLogLikelihoods() : 37.051969316000005
22:34:19.061 INFO  SmithWatermanAligner - Total compute time in java Smith-Waterman : 19.18 sec
22:34:19.061 INFO  HaplotypeCaller - Shutting down engine
[2018年4月5日 下午10时34分19秒] org.broadinstitute.hellbender.tools.walkers.haplotypecaller.HaplotypeCaller done. Elapsed time: 2.53 minutes.
Runtime.totalMemory()=421003264

real	2m34.877s
user	5m16.513s
sys	0m1.218s
18/04/05 22:34:20 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
